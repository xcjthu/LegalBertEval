[train] #train parameters
epoch = 5
batch_size = 16

reader_num = 10

optimizer = adamw
learning_rate = 1e-5
weight_decay = 0
step_size = 1
lr_multiplier = 1

PLM_vocab = hfl/chinese-roberta-wwm-ext
PLM_path = /home/xcj/LegalLongPLM/Lawformer

query_len = 384
cand_len = 1661

grad_accumulate = 1

gat_strategy = QueryAtt

[eval] #eval parameters
batch_size = 16

reader_num = 10

[data] #data parameters
train_dataset_type = JsonFromFiles
train_formatter_type = lecard

valid_dataset_type = JsonFromFiles
valid_formatter_type = lecard

query_path = /home/xcj/LegalLongPLM/data/LeCaRD-main/data/query_split
cand_path = /home/xcj/LegalLongPLM/data/LeCaRD-main/data/candidates/candidates
label_path = /home/xcj/LegalLongPLM/data/LeCaRD-main/data/label/golden_labels.json
# test_file = 1

result_path = /home/xcj/LegalLongPLM/results/lecard/Lawformer

[model] #model parameters
model_name = lecard

[output] #output parameters
output_time = 1
test_time = 1

model_path = /home/xcj/LegalLongPLM/lecard/
model_name = LecardLFM2048

tensorboard_path = /home/xcj/LegalLongPLM/tensorboard

output_function = out1
tqdm_ncols = 150
